name: CI

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check release name and OS
        id: check_release
        run: |
          release_name="${{ github.event.release.tag_name }}"
          echo "Release Name: $release_name"
          if [[ $release_name =~ (win)-(dch|studio)-([0-9]+\.[0-9]+)(-.+)? ]]; then
            os="${BASH_REMATCH[1]}"
            variant="${BASH_REMATCH[2]}"
            version="${BASH_REMATCH[3]}"
            echo "Operating System: $os"
            echo "Variant: $variant"
            echo "Version: $version"

            if [ "$os" != "win" ]; then
              echo "Not a Windows release. Stopping the CI workflow."
              exit 0
            fi

            if [ "$variant" == "dch" ]; then
              variant="DCH"
            fi
          else
            echo "Invalid release name format. Must be in the format 'win-dch-123.45' or 'win-studio-123.45'"
            exit 1
          fi

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run autopatch.py
        run: |
          echo "Running autopatch.py with version ${{ env.check_release_VERSION }}"
          cd "${{ github.workspace }}/win/tools/autopatch"
          python autopatch.py ${{ env.check_release_VERSION }}
          echo "autopatch.py executed successfully"

      - name: Run add_driver.py
        run: |
          echo "Running add_driver.py with variant $variant and version ${{ env.check_release_VERSION }}"
          cd "${{ github.workspace }}/tools/readme-autogen"
          python add_driver.py -W -P GeForce --variant $variant -w win10 ${{ env.check_release_VERSION }}
          echo "add_driver.py executed successfully"

      - name: Run readme_autogen.py
        run: |
          echo "Running readme_autogen.py"
          cd "${{ github.workspace }}/tools/readme-autogen"
          python readme_autogen.py
          echo "readme_autogen.py executed successfully"

      - name: Commit and push changes
        run: |
          echo "Committing and pushing changes"
          cd "${{ github.workspace }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "$os: add support for $variant driver ${{ env.check_release_VERSION }}"
          git push origin master
          echo "Committed and pushed changes"
